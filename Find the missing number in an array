// Find the missing number in an array 

//  Given an integer N and an array of size N-1 containing N-1 numbers between 1 to N. 
// Find the number(between 1 to N), that is not present in the given array.

// Ex-> n = 5
// arr[] = {1,5,2,3}
// Output --> 4 

// Time Complexity --> O(n)
// Space Complexity --> O(1)

#include<bits/stdc++.h>
using namespace std;
int findMissingNumber(int arr[],int n)
{
    int expected_sum = (n * (n+1))/2;
    int real_sum = 0;
    for(int i=0;i<n-1;i++)
    {
        real_sum += arr[i];
    }
    return (expected_sum - real_sum);
}
int main()
{
    int n;
    cin>>n;
    int arr[n-1];
    for(int i=0;i<n-1;i++)
    {
        cin>>arr[i];
    }
    int ans = findMissingNumber(arr,n);
    cout<<"Missing number is : "<<ans<<"\n";
    return 0;
}
