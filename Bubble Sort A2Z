// Bubble Sort 

// It is a simple and efficient sorting algorithm that works by repeatedly swapping the adjacent 
// elements if they are in the wrong order.

// It is a stable sorting algorithm as it preserves the order 
// It is an inplace sorting algorithm as it doesnt require any extra space.

// time complexity --> O(n^2)

#include<bits/stdc++.h>
using namespace std;
void bubbleSort(vector<int>&v,int n)
{
    for(int i=0;i<n-1;i++)
    {
        for(int j=0;j<n-i-1;j++)
        {
            if(v[j] > v[j+1])
            {
                swap(v[j],v[j+1]);
            }
        }
    }
}
int main()
{
    int n;
    cin>>n;
    vector<int>v(n,0);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    bubbleSort(v,n);
    for(int i=0;i<n;i++)
    {
        cout<<v[i]<<" ";
    }
    cout<<"\n";
    return 0;
}
