// Remove Duplicates in-place from a sorted array 

#include<bits/stdc++.h>
using namespace std;
void printArray(vector<int>v,int n)
{
    for(int i=0;i<n;i++)
    {
        cout<<v[i]<<" ";
    }
    cout<<"\n";
}
int removeDuplicates(vector<int>&v,int n)
{
    // time complexity --> O(n)
    // Auxiliary space --> O(1)
    // basicallu keep 2 pointers and keep moving forward in the array till u get diff elements and 
    // then place that element at the beginning and keep doing this 
    int start = 0;
    int end = 1;
    int idx = 0;
    while(start < n && end < n)
    {
        if(v[end] == v[start])
        {
            end += 1;
        }
        else
        {
            v[idx] = v[start];
            idx += 1;
            start = end;
            end = end + 1;
        }
    }
    v[idx] = v[n-1];
    return (idx + 1);
}
int main()
{
    int n;
    cin>>n;
    vector<int>v(n,0);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    printArray(v,n);
    int k = removeDuplicates(v,n);
    printArray(v,n);
    return 0;
}
