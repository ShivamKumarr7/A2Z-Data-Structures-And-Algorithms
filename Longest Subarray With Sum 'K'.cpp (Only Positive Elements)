// Longest Subarray with given Sum K (Positives)

// Given an array and a sum k, we need to print the length of the longest subarray that sums to k.


// Ex-> n = 3,k = 5
// arr[] = {2,3,5}
// Answer --> 2 

// Ex-> n = 5,k = 10 
// arr[] = {2,3,5,1,9}
// Answer --> 3 

#include<bits/stdc++.h>
using namespace std;
int findLongestSubarray(vector<int>v,int n,int k)
{
    int ans = 0;
    int start = 0;
    int end = 0;
    int sum = 0;
    while(start < n && end < n)
    {
        if(v[end] <= k)
        {
            sum += v[end];
            if(sum <= k)
            {
                end += 1;
            }
            else 
            {
                while(sum > k)
                {
                    sum = sum - v[start];
                    start = start + 1;
                }
                end += 1;
            }
        }
        else 
        {
            end = end + 1;
            start = end;
            sum = 0;
        }
        if(sum == k)
        {
            ans = max(ans,end-start);
        }
    }
    return ans;
}
int main()
{
    int n;
    cin>>n;
    vector<int>v(n,0);
    for(int i=0;i<n;i++)
    {
        cin>>v[i];
    }
    int k;
    cin>>k;
    int ans = findLongestSubarray(v,n,k);
    cout<<ans<<"\n";
    return 0;
}
