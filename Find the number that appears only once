// Q) Find the number that appears once and all other numbers appears twice 

// Ex->
// n = 7
// arr[] = {6,1,8,6,1,5,8};
// ans --> 5 


// Time complexity --> O(n)
// Space complexity --> O(1)

// We can simply xor all the elements and find the number that appears only once.

#include<bits/stdc++.h>
using namespace std;
int numberAppearingOnce(int arr[],int n)
{
    int array_xor = 0;
    for(int i=0;i<n;i++)
    {
        array_xor = array_xor ^ arr[i];
    }
    return array_xor;
}
int main()
{
    int n;
    cin>>n;
    int arr[n] = {0};
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    int ans = numberAppearingOnce(arr,n);
    cout<<ans<<"\n";
    return 0;
}
