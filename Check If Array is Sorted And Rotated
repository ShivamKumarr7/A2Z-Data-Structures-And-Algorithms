// Q) Check if the array is sorted and rotated ? 

// Time complexity --> O(n)
// Space complexity --> O(1)

#include<bits/stdc++.h>
using namespace std;
bool isSortedAndRotated(int arr[],int n)
{
    if(n == 1 || n == 2)
    {
        return true;
    }
    int idx = -1;
    for(int i=0;i<n-1;i++)
    {
        if(arr[i] > arr[i+1])
        {
            idx = i;
            break;
        }
    }
    if(idx == -1)
    {
        return true;
    }
    else if(idx == (n-2))
    {
        if(arr[n-1] <= arr[0])
        {
            return true;
        }
        return false;
    }
    for(int i=idx+1;i<n-1;i++)
    {
        if(arr[i] > arr[i+1])
        {
            return false;
        }
    }
    if(arr[n-1] <= arr[0])
    {
        return true;
    }
    return false;
}
int main()
{
    int n;
    cin>>n;
    int arr[n] = {0};
    for(int i=0;i<n;i++)
    {
        cin>>arr[i];
    }
    bool ans = isSortedAndRotated(arr,n);
    ans ? cout<<"Yes,it is sorted and rotated\n" : cout<<"It is not sorted and rotated\n";
    return 0;
}
